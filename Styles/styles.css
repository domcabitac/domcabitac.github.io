@font-face {
    font-family: 'Avenir LT Std';
    src: url('fonts/AvenirLTStd-Book.woff') format('woff');
}

HTML,
body {
    /* background-color: #ffffff; */
    font-family: 'Avenir LT Std';
    padding: 0;
    margin: 0;
    width: 100%;
    height: 100%;
}

center {
    z-index: 2;
    position: absolute;
    width: 100%;
}

svg {
    width: 45px;
    height: 45px;
    fill: white;
}

@keyframes BackgroundGradient {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

a>svg {
    animation: fadeInAndScale 0.8s ease-in-out forwards;
    transition: 250ms all ease;
}

@keyframes fadeInAndScale {
    from {
        opacity: 0;
        transform: scale(0);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

* {
    text-decoration: none;
}

title {
    padding-top: 15%;
    font-weight: 500;
    text-align: center;
    display: block;
    color: white;
    z-index: 50;
    font-size: 90px;
    font-family: 'Avenir LT Std';
}

#typeWritter {
    color: rgba(255, 255, 255, 0.719);
    font-weight: 75;
    font-size: 40px;
    font-weight: lighter;
}

a {
    display: inline-block;
    bottom: 0;
    margin: 30px;
    margin-top: 15%;
    transition: 250ms all ease;
}

a:hover {
    transform: scale(1.2);
}

@media only screen and (max-width: 600px) {
    a {
        display: inline-block;
        bottom: 0;
        margin: 10px;
        margin-top: 65%;
        transition: transform 0;
        /* Animation */
    }
    a:hover {
        transform: scale(1);
    }
    title {
        padding-top: 20%;
        font-weight: 400;
        text-align: center;
        display: block;
        color: white;
        font-size: 65px;
    }
    #typeWritter {
        color: white;
        font-size: 28px;
        margin-top: 5%;
        font-weight: lighter;
    }
     :root {
        --gird-width: 30px !important;
        --gird-height: 30px !important;
        --point-gap-width: calc(var(--gird-width) * 2.75) !important;
        --point-gap-height: calc(var(--gird-height) * 2.75) !important;
    }
}

:root {
    --gird-width: 30px;
    --gird-height: 30px;
    --line-color: #999;
    --dot-color: #ccc;
    --dot-size: 2px;
    --point-gap-width: calc(var(--gird-width) * 4);
    --point-gap-height: calc(var(--gird-height) * 4);
}

.grid-bg {
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.ba-grid {
    position: relative;
    z-index: 1;
    background-image: radial-gradient(ellipse at bottom left, rgba(104, 128, 138, 0.4) 10%, rgba(138, 114, 76, 0) 40%), linear-gradient(to bottom, #293036, rgba(42, 60, 87, 0.4)), linear-gradient(135deg, #191D20, #384149);
}

.ba-grid:before,
.ba-grid:after,
.inner:before,
.inner:after {
    content: '';
    position: absolute;
    z-index: 1;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    mix-blend-mode: overlay;
}

.ba-grid:before {
    background-image: linear-gradient(var(--line-color), transparent 1px), linear-gradient(to right, var(--line-color), transparent 1px);
    background-size: 100% var(--gird-height), var(--gird-width) 100%;
}

.ba-grid:after {
    background-image: radial-gradient(var(--dot-color) 1px, transparent 1px);
    background-size: var(--point-gap-width) var(--point-gap-height);
    background-position: calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2);
}

.inner:before,
.inner:after {
    background-image: radial-gradient(var(--dot-color) var(--dot-size), transparent var(--dot-size));
    background-size: var(--point-gap-width) var(--point-gap-height);
    background-position: calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2);
}

.inner:after {
    transform: scale(1.1, 1.1);
}

.inner:before {
    transform: scale(1.2, 1.2);
}

.anim:after {
    animation: 6.4s linear move infinite;
}

.anim .inner:after {
    animation: 3.2s linear move infinite;
}

.anim .inner:before {
    animation: 1.6s linear move infinite;
}

@keyframes move {
    0% {
        background-position: calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2);
    }
    100% {
        background-position: calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2 * -1);
    }
}